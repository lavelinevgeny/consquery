
&НаКлиенте
Процедура ИзменитьПароль(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

#Область СервисныеФункции

&НаСервереБезКонтекста
Функция гВосстановитьНастройкиПараметровПодключения(ТипОбработка, СеансовыеДанные)
	
	Возврат ОбъектОбработки(ТипОбработка, СеансовыеДанные).гВосстановитьНастройкиПараметровПодключения();
	
КонецФункции // гВосстановитьНастройкиПараметровПодключения()

&НаСервереБезКонтекста
Функция гПодключитьКОблаку(ТипОбработка, СеансовыеДанные, ИдентификаторСессии, email, пароль, тестирование = Ложь, НастройкиПрокси = Неопределено)
	
	Возврат ОбъектОбработки(ТипОбработка, СеансовыеДанные).гПодключитьКОблаку(ИдентификаторСессии, email, пароль, тестирование, НастройкиПрокси);
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбъектОбработки(ТипОбработка, СеансовыеДанные)
	Результат = Новый (ЗначениеИзСтрокиВнутр(ТипОбработка));
	Результат.гСеансовыеДанные = СеансовыеДанные;
	Возврат Результат;
КонецФункции

// Процедура - Сохраняет настройки в хранилище общих настроек
&НаСервереБезКонтекста
Процедура СохранитьНастройкиПараметровПодключения(СтруктураСохраняемыхЗначений)
	
    ключОбъекта      = "Обработка.consquery83";
    ключНастроек     = "Обработка.consquery83.ФормаПодключенияПоследниеЗначения";
    описаниеНастроек = "ПоследниеЗначения";
    имяПользователя  = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;

    настройки = Новый Соответствие;
    настройки.Вставить("ФормаПодключенияПоследниеЗначения", СтруктураСохраняемыхЗначений);

    ХранилищеОбщихНастроек.Сохранить(ключОбъекта, ключНастроек, настройки, описаниеНастроек, имяПользователя);

КонецПроцедуры // СохранитьНастройкиПараметровПодключения()
#КонецОбласти

#Область Обработчики

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");  
	
     // установим внутреннее строковое представление типа значения объекта обработки
    ТипОбработка = ЗначениеВСтрокуВнутр(ТипЗнч(ОбработкаОбъект));

	СеансовыеДанные = Новый Структура();	
	СеансовыеДанные.Вставить("ИдентификаторСеанса", Новый УникальныйИдентификатор);
	СеансовыеДанные.Вставить("КЭШ"                , Новый Структура);
	
	Элементы.Пароль.РежимПароля = Не ПоказатьПароль;	
	
	email = Параметры.email;
	
	Если Не ЗначениеЗаполнено(email) Тогда 
		лСохраненныеЗначения = гВосстановитьНастройкиПараметровПодключения(ТипОбработка, СеансовыеДанные);
		Если ТипЗнч(лСохраненныеЗначения) = Тип("Структура") Тогда 
			лСохраненныеЗначения.Свойство("email", email);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура Войти(Команда)
	
	Результат = гПодключитьКОблаку(ТипОбработка, СеансовыеДанные, ИдентификаторСессии, email, пароль);
	
	Если Результат.Статус = "OK" Тогда 
		СтрокаСостояния = Результат.Информация;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Зеленый;
		ИдентификаторСессии = Результат.Соединение;
		СохранитьНастройкиПараметровПодключения(Новый Структура("email, ИдентификаторСессии", email, Результат.Соединение));
		Оповестить("ОбновитьИмяПользователяВОблаке", Новый Структура("ИмяПользователя", email));
		Закрыть(Истина);
	Иначе
		СтрокаСостояния = Результат.ТекстОшибки;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПарольПриИзменении(Элемент)
	Элементы.Пароль.РежимПароля = Не ПоказатьПароль;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеКОблаку(Команда)
	Результат = гПодключитьКОблаку(ТипОбработка, СеансовыеДанные, ИдентификаторСессии, email, пароль);
	
	Если Результат.Статус = "OK" Тогда 
		СтрокаСостояния = Результат.Информация;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Зеленый;
	Иначе
		СтрокаСостояния = Результат.ТекстОшибки;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
КонецПроцедуры // Проверить()

#КонецОбласти
#КонецОбласти

// процедура ОсновныеДействияФормыРегистрация(Кнопка)
//	лСоединение = ВосстановитьИдентификаторСессииConsqueryCloud();
//	Результат = гЗарегистрироватьВОблаке(лСоединение, email, пароль);
//	Если Результат.Статус = "OK" Тогда 
//		СтрокаСостояния = Результат.Информация;
//		ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Зеленый;
//	Иначе
//		СтрокаСостояния = Результат.ТекстОшибки;
//		ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Красный;
//	КонецЕсли;
// конецПроцедуры

// процедура ОсновныеДействияФормыИзменитьПароль(Кнопка)
//	лСоединение = ВосстановитьИдентификаторСессииConsqueryCloud();
//	Результат = гЗарегистрироватьВОблаке(лСоединение, email, пароль, Истина);
//	Если Результат.Статус = "OK" Тогда 
//		СтрокаСостояния = Результат.Информация;
//		ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Зеленый;
//	Иначе
//		СтрокаСостояния = Результат.ТекстОшибки;
//		ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Красный;
//	КонецЕсли;
// конецПроцедуры

// процедура ФлажокПоказатьПарольПриИзменении(Элемент)
//	ЭлементыФормы.пароль.РежимПароля = Не ФлажокПоказатьПароль;
// конецПроцедуры

// процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
//	ЭлементыФормы.пароль.РежимПароля = Не ФлажокПоказатьПароль;	
// конецПроцедуры

// процедура ОсновныеДействияФормыПроверить(Кнопка)
//	
//	лСоединение = ВосстановитьИдентификаторСессииConsqueryCloud();
//	
//	Результат = гПодключитьКОблаку(лСоединение, email, пароль, Истина);
//	Если Результат.Статус = "OK" Тогда 
//		СтрокаСостояния = Результат.Информация;
//		ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Зеленый;
//	Иначе
//		СтрокаСостояния = Результат.ТекстОшибки;
//		ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Красный;
//	КонецЕсли;
//	
// конецПроцедуры

// процедура ОсновныеДействияФормыВыйти(Кнопка)
//	лСоединение = ВосстановитьИдентификаторСессииConsqueryCloud();
//	Если Не ЗначениеЗаполнено(лСоединение) Тогда 
//		ПоказатьПредупреждение(, "Вы еще не входили.", 10, "Ошибка выхода из сервиса");
//	Иначе
//		Результат = гОтключитьсяОтОблака(лСоединение);
//		гСохранитьИдентификаторСессииConsqueryCloud(Неопределено);			
//		Если Результат.Статус = "OK" Тогда 
//			СтрокаСостояния = Результат.Информация;
//			ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Зеленый;
//			Оповестить("ОбновитьИмяПользователяВОблаке", Новый Структура("ИмяПользователя", Неопределено));
//		Иначе
//			СтрокаСостояния = Результат.ТекстОшибки;
//			ЭлементыФормы.СтрокаСостояния.ЦветТекстаПоля = WebЦвета.Красный;
//		КонецЕсли;
//	КонецЕсли;
// конецПроцедуры
