
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");  
	
     // установим внутреннее строковое представление типа значения объекта обработки
    ТипОбработка = ЗначениеВСтрокуВнутр(ТипЗнч(ОбработкаОбъект));

	Элементы.Пароль.РежимПароля = Не ПоказатьПароль;	
	
	email               = Параметры.email;
	ИдентификаторСессии = Параметры.ИдентификаторСессии;
	
	Если Не ЗначениеЗаполнено(email) Тогда 
		лСохраненныеЗначения = гВосстановитьНастройкиПараметровПодключения(ТипОбработка);
		Если ТипЗнч(лСохраненныеЗначения) = Тип("Структура") Тогда 
			лСохраненныеЗначения.Свойство("email"              , email);
			лСохраненныеЗначения.Свойство("ИдентификаторСессии", ИдентификаторСессии);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказатьПарольПриИзменении(Элемент)
	Элементы.Пароль.РежимПароля = Не ПоказатьПароль;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьПароль(Команда)
	
	Результат = гЗарегистрироватьВОблаке(ТипОбработка, ИдентификаторСессии, email, пароль, истина);
	
	Если Результат.Статус = "OK" Тогда 
		СтрокаСостояния = Результат.Информация;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Зеленый;
	Иначе
		СтрокаСостояния = Результат.ТекстОшибки;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
	
КонецПроцедуры // ИзменитьПароль()

&НаКлиенте
Процедура ПроверитьПодключениеКОблаку(Команда)
	Результат = гПодключитьКОблаку(ТипОбработка, ИдентификаторСессии, email, пароль, Истина);
	
	Если Результат.Статус = "OK" Тогда 
		СтрокаСостояния = Результат.Информация;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Зеленый;
	Иначе
		СтрокаСостояния = Результат.ТекстОшибки;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
КонецПроцедуры // Проверить()

&НаКлиенте
Процедура Регистрация(Команда)
	
	Результат = гЗарегистрироватьВОблаке(ТипОбработка, ИдентификаторСессии, email, пароль);
	
	Если Результат.Статус = "OK" Тогда 
		СтрокаСостояния = Результат.Информация;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Зеленый;
	Иначе
		СтрокаСостояния = Результат.ТекстОшибки;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
	
КонецПроцедуры // Регистрация()

&НаКлиенте
Процедура Войти(Команда)
	
	Результат = гПодключитьКОблаку(ТипОбработка, ИдентификаторСессии, email, пароль);
	
	Если Результат.Статус = "OK" Тогда 
		СтрокаСостояния = Результат.Информация;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Зеленый;
		
		ИдентификаторСессии = Результат.Соединение;
		
		СтруктураСохраняемыхЗначений = Новый Структура("email, ИдентификаторСессии", email, Результат.Соединение);
		СохранитьНастройкиПараметровПодключения(СтруктураСохраняемыхЗначений);
		Закрыть(СтруктураСохраняемыхЗначений);
	Иначе
		СтрокаСостояния = Результат.ТекстОшибки;
		Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Красный;
	КонецЕсли;
	
КонецПроцедуры // Войти()

&НаКлиенте
Процедура Выйти(Команда)
	
	Если Не ЗначениеЗаполнено(ИдентификаторСессии) Тогда 
		ПоказатьПредупреждение(, "Вы еще не входили.", 10, "Ошибка выхода из сервиса");
	Иначе
		Результат = гОтключитьсяОтОблака(ТипОбработка, ИдентификаторСессии);
		Если Результат.Статус = "OK" Тогда 
			СтрокаСостояния = Результат.Информация;
			Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Зеленый;
			
			ИдентификаторСессии = Неопределено;
			
			СтруктураСохраняемыхЗначений = Новый Структура("email, ИдентификаторСессии", Неопределено, Неопределено);			
			СохранитьНастройкиПараметровПодключения(СтруктураСохраняемыхЗначений);			
			Оповестить("ОбработатьИзменениеДанныеОПодключении", СтруктураСохраняемыхЗначений);						
		Иначе
			СтрокаСостояния = Результат.ТекстОшибки;
			Элементы.СтрокаСостояния.ЦветТекста = WebЦвета.Красный;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Выйти()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция гВосстановитьНастройкиПараметровПодключения(ТипОбработка)
	
	Возврат ОбъектОбработки(ТипОбработка).гВосстановитьНастройкиПараметровПодключения();
	
КонецФункции // гВосстановитьНастройкиПараметровПодключения()

&НаСервереБезКонтекста
Функция гЗарегистрироватьВОблаке(ТипОбработка, соединение, email, пароль, УстановкаНовогоПароля = Ложь, НастройкиПрокси = Неопределено)
	
	Возврат ОбъектОбработки(ТипОбработка).гЗарегистрироватьВОблаке(соединение, email, пароль, УстановкаНовогоПароля, НастройкиПрокси);
	
КонецФункции

&НаСервереБезКонтекста
Функция гПодключитьКОблаку(ТипОбработка, соединение, email, пароль, тестирование = Ложь, НастройкиПрокси = Неопределено)
	
	Возврат ОбъектОбработки(ТипОбработка).гПодключитьКОблаку(соединение, email, пароль, тестирование, НастройкиПрокси);
	
КонецФункции

&НаСервереБезКонтекста
Функция гОтключитьсяОтОблака(ТипОбработка, ИдентификаторСессии)
	
	Возврат ОбъектОбработки(ТипОбработка).гОтключитьсяОтОблака(ИдентификаторСессии);
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбъектОбработки(ТипОбработка)
	
	Результат = Новый (ЗначениеИзСтрокиВнутр(ТипОбработка));
	
	Возврат Результат;
	
КонецФункции

// Процедура - Сохраняет настройки в хранилище общих настроек
&НаСервереБезКонтекста
Процедура СохранитьНастройкиПараметровПодключения(СтруктураСохраняемыхЗначений)
	
    ключОбъекта      = "Обработка.consquery83";
    ключНастроек     = "Обработка.consquery83.ФормаПодключенияПоследниеЗначения";
    описаниеНастроек = "ПоследниеЗначения";
    имяПользователя  = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;

    настройки = Новый Соответствие;
    настройки.Вставить("ФормаПодключенияПоследниеЗначения", СтруктураСохраняемыхЗначений);

    ХранилищеОбщихНастроек.Сохранить(ключОбъекта, ключНастроек, настройки, описаниеНастроек, имяПользователя);

КонецПроцедуры // СохранитьНастройкиПараметровПодключения()

#КонецОбласти