name: Notify Telegram on Push, Release, and Prerelease

on:
  push:
    branches:
      - "**"
  release:
    types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Send notification to Telegram
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        EVENT_NAME=${{ github.event_name }}
        EVENT_ACTION=${{ github.event.action }}

        # MESSAGE="${{ github.event_name }}
        # ${{ github.event.action }}
        # ${{ github.event.release.tag_name }}: –ò–º—è —Ç–µ–≥–∞ —Ä–µ–ª–∏–∑–∞.
        # ${{ github.event.release.name }}: –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞.
        # ${{ github.event.release.body }}: –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞.
        # ${{ github.event.release.html_url }}: URL —Ä–µ–ª–∏–∑–∞.
        # ${{ github.event.release.upload_url }}: URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Ä–µ–ª–∏–∑–∞.
        # ${{ github.event.release.draft }}: –ë—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–µ–ª–∏–∑ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º.
        # ${{ github.event.release.prerelease }}: –ë—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–µ–ª–∏–∑ –ø—Ä–µ—Ä–µ–ª–∏–∑–æ–º.
        # ${{ github.event.repository.full_name }}: –ü–æ–ª–Ω–æ–µ –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, user/repo).
        # ${{ github.event.repository.html_url }}: URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
        # ${{ github.repository }}: –ü–æ–ª–Ω–æ–µ –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, user/repo).
        # ${{ github.ref }}: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –≤–µ—Ç–∫–µ –∏–ª–∏ —Ç–µ–≥—É, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª —Å–æ–±—ã—Ç–∏–µ.
        # ${{ github.sha }}: SHA –∫–æ–º–º–∏—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª —Å–æ–±—ã—Ç–∏–µ.
        # "
        
        FLAG_SEND_MESSAGE=false        
        
        if [ "$EVENT_NAME" == "push" ]; then
          COMMIT_DATE=$(git log -1 --pretty=format:'%ad' --date=short)
          COMMIT_HASH=$(git rev-parse HEAD)
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          REPO_URL=$(git config --get remote.origin.url | sed 's/git@github.com:/https:\/\/github.com\//;s/.git$//')
          COMMIT_URL="$REPO_URL/commit/$COMMIT_HASH"
          MESSAGE="<b>Push Event:</b>
          <b>Repository:</b> <a href=\"$REPO_URL\">GitHub Repo</a>
          <b>Commit:</b> <a href=\"$COMMIT_URL\">$COMMIT_HASH</a>
          <b>Date:</b> $COMMIT_DATE"
          FLAG_SEND_MESSAGE=false
        elif [ "$EVENT_ACTION" == "published" ]; then
          RELEASE_URL=${{ github.event.release.html_url }}
          REPO_URL=$(git config --get remote.origin.url | sed 's/git@github.com:/https:\/\/github.com\//;s/.git$//')
          IS_PRERELEASE=${{ github.event.release.prerelease }}
          FLAG_SEND_MESSAGE=true

          if [ $IS_PRERELEASE == true ]; then
            MESSAGE="#–ü—Ä–µ—Ä–µ–ª–∏–∑
        <b>–ù–æ–≤—ã–π <u>–ø—Ä–µ</u>—Ä–µ–ª–∏–∑ <a href=\"$RELEASE_URL\">${{ github.event.release.name }}</a>:</b>üíÄ"
          else 
            MESSAGE="#–†–µ–ª–∏–∑
        <b>–ù–æ–≤—ã–π —Ä–µ–ª–∏–∑ <a href=\"$RELEASE_URL\">${{ github.event.release.name }}</a>:</b>üöÄ"
          fi
          MESSAGE+="
        <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${{ github.event.release.body }}
        "
        fi

        if [ $FLAG_SEND_MESSAGE == true ]; then
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
            -d chat_id=$TELEGRAM_CHAT_ID \
            -d text="$MESSAGE" \
            -d parse_mode=HTML
        fi
